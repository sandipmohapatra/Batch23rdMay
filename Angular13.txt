Angular13
---------------------
1)For Angular the scripting language will be typescript.Browser cannot understand typescript (.ts).
So after compilelation of type script it is converted into .js  and the browser can understand and display the output.

2)Angular is faster because of virtual DOM.<p>The score =203</p>
So when the page is refreshed only the modified part will be loaded not the whole page. 
example :- cricbuzz.com.In this only the score part is updated not the whole page.

3)It is mostly used for development of single page application.(SPA)

4)Dependency injection:- loading of dependency at the runtime.

5)It support one way and two way bindings.

6)Testing  of our application can be done using jasmine and karma.

7)Angular is an open source,cross platform,front-end.

8)It provides end to end solution for building application, debugging,testing and deploying.

9)Typescript support Object oriented Programming language.

10)Angular framework support MVC,MVVM

11)The speed is high as compared to older tecnology.

12)It uses AOT compiler.[ahead-of-time].It convert the typescript into javascript.
It provides faster rendering.

-------------------------------------------------------------------------------------------------
Types of Binding
----------------------------
1)one way binding:-
i)interpolation:-{{6+7}},{{name}}
we use double curly braces and is known as interpolation.
or template expression.

2)property binding :-
<img[src]="shoe.jpg">
It is used with square brackets to the DOM properties.

3)event binding
<button(click)="onClick()">Save</button>
------------------------------------------------------------------------------------
2)two way binding:-
<input type=text name=t1 size=20 value="sandip">
<input type=text name=t1 size=20 [(ngModel)]="name">
in this user can store and update the entry.To make change in the user entry we use two-way binding. 
---------------------------------------------------------------------------------------------
software installation
------------------------------------
1)nodejs download
2)npm install -g typescipt
3)to compile:-
tsc example1.ts
4)to run:-
node example1.js
-------------------------------------------------------------------------
Angular13
-----------------------
step -1)npm install -g @angular/cli

step -2)ng new priyanka

step-3)ng serve
to compile
step-4)localhost:4200
-----------------------------------------------
Example 1
--------------------
app.component.html
------------------------------
<h1>Employee Registration Page</h1><hr color="red">
<table>
<tr><td>Enter your name</td><td><input type=text name=t1 size=20></td></tr>
<tr><td>Enter your Address</td><td><input type=text name=t2 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t3 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t4 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t5 size=20></td></tr>
<tr><td></td><td><input type=submit value="Submit"></td></tr>
</table>
---------------------------------------------------------
app.component.css
--------------------------------
h1{
  color:red;
}
-----------------------------------------------
example-2
------------------
<h1>Employee Registration Page</h1><hr color="red">
<p>The sum of 2 numbers are</p><p>{{7+8}}</p>
<p>The mul of 2 numbers are</p><p>{{7*8}}</p>
<p>The sub of 2 numbers are</p><p>{{7-8}}</p>
<p>The div of 2 numbers are</p><p>{{16 / 8}}</p>
<table>
<tr><td>Enter your name</td><td><input type=text name=t1 size=20></td></tr>
<tr><td>Enter your Address</td><td><input type=text name=t2 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t3 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t4 size=20></td></tr>
<tr><td>Enter your name</td><td><input type=text name=t5 size=20></td></tr>
<tr><td></td><td><input type=submit value="Submit"></td></tr>

</table>
-------------------------------------------------------------------------------
example-3
-------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent
{
  name:string = `Pawan`;
  nameList:string[]=["Priya","Darshan","Mohan","Anil","Sunil"];
  title = 'mphasis2023';
}
---------------------------------------------------------------------------------
<h1>Employee List</h1><hr color="red">
<p>My name is {{name}}</p>
<p>My Friends are {{nameList[0]}}</p>
<p>My Friends are {{nameList[1]}}</p>
<p>My Friends are {{nameList[2]}}</p>
<p>My Friends are {{nameList[3]}}</p>
<p>My Friends are {{nameList[4]}}</p>

----------------------------------------------------------------------------------------------
example-4
---------------------
step 1:- to create a new module (login,register,service,contact,feedback)
goto app module.(cd app)
ng g c login
ng g c register
ng g c service

step 2:-copy and paste the selector in index.html

step 3:- goto app.module.ts 
bootstrap: [LoginComponent]

step 4:- modify or create login.component.html 

step-5:-ng serve
---------------------------------------------------------------------------------------------------------------
how to create registration page
-------------------------------------------
step 1:- ng g c registration

step 2:-bootstrap: [RegisterComponent]   <---app.module.ts

step3:-index.html paste the selector

step4:- type html code in register.component.html

step 5:- ng server
--------------------------------------------------------------------------------
example-5
----------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-contact',
  template: `
  <p>Hello my name is {{name}}</p>
  <p>Hello my email is {{email}}</p>
  <p>Hello my address is {{address.street}} {{address.loc}} {{address.state}} {{address.city}}</p>
<p><Button (click) ="sayName()">Say your Details</Button>
<p><Button (click) ="Details()">Details...</Button>
<h3>My Hobbies are </h3>{{hobbies}}
<h3>My Daily Foods are</h3>
<ul>
<li *ngFor="let food of foods">
{{food}}
</li>
</ul>
  `,

})
export class ContactComponent
{
name:string;
email:string;
address:any;
hobbies:string[];
foods:string[];
constructor()
{
  this.name='sandip kumar';
  this.email='sandip@gmail.com';
  this.address=
  {
    street:'M G Road',
    loc:'Savaji Nagar',
    state:'Karnataka',
    city:'Bangalore'
  }
  this.hobbies=['music','cricket','movies','football'];
  this.foods=['Rica and Dal','Biryani','noodles','sweets'];
}
sayName()
{
  console.log("my name is "+this.name);
  console.log("my email is "+this.email);
  console.log("my address is "+this.address.street +" "+this.address.loc+"  "+this.address.city);
  }
  Details()
  {
    this.sayName();
  }
  }
  interface address
{
street:string;
loc:string;
state:string;
city:string;
}
-----------------------------------------------------------------------------------------


wap to display your details
1)name
2)collage name
3)subjects studied
4)qualification
assign data using construactor.
----------------------------------------------------------------------------------------------------
Routing in Angular
------------------------------
1)Routing means navigating to different modules.
2)Routing can load new contents into page without reloading  the complete page.
3)SPA single page application and progressive web application requires routing.
4)user can stay at one page and can get access to every page.
5)Library file used is @Angular/router and @Angular/core
6)RouterModule :-contains all the modules has to be routed. It imports routes .
7)Routes:-Routes Object is used to configure routes to the application.
------------------------------------------------------------------------------------
import {Routes,RouterModule} from '@angular/router';
------------------------- 

step 1:-create a new file router.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'darshan',
  template :`
 MENU<ul>
 <li><a [routerLink]="['/login']">Login Page</a></li>
 <li><a [routerLink]="['/register']">Register Page</a></li>
 <li><a [routerLink]="['/contact']">Contact Page</a></li>
</ul><hr>
<router-outlet></router-outlet> `
})
export class RouterAppComponent
{

}
-----------------------------------------------------------------------------------------------
step 2:- modiyfy the app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { LoginComponent } from './login/login.component';
import { RegisterComponent } from './register/register.component';
import { ContactComponent } from './contact/contact.component';
import { RouterAppComponent } from './router.component'; <---------------------------
import {Routes,RouterModule} from '@angular/router';   <-------------------------------------

const appRoutes: Routes =                  <-------------------------------------------
[
  {path:'login',component:LoginComponent},
  {path:'register',component:RegisterComponent},
  {path:'contact',component:ContactComponent},
];

@NgModule({
  declarations: [
    AppComponent,
    LoginComponent,
    RegisterComponent,
    ContactComponent,
    RouterAppComponent  <-----------------------------------------
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    RouterModule.forRoot(appRoutes)  <---------------------------------
  ],
  providers: [],
  bootstrap: [RouterAppComponent]    <------------------------------
})
export class AppModule { }
------------------------------------------------------------------------------
Example-7
----------------
import { Component } from '@angular/core';

@Component({
  selector: 'darshan',
  templateUrl: './router.component.html'
})
export class RouterAppComponent
{}
--------------------------------------------------------------------------------------
router.component.html
----------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<header>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="stylesheet" href="https://www.w3schools.com/lib/w3-theme-black.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <body id="myPage">
<div class="w3-top">
 <div class="w3-bar w3-theme-d2 w3-left-align">
  <a class="w3-bar-item w3-button w3-hide-medium w3-hide-large w3-right w3-hover-white w3-theme-d2" href="javascript:void(0);" onclick="openNav()"><i class="fa fa-bars"></i></a>
  <a class="w3-bar-item w3-button w3-coral"><i class="fa fa-home w3-margin-right"></i>Mphasis Batch-2023</a>
  <a routerLink="home" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Home</a>
  <div class="w3-dropdown-hover w3-hide-small">
    <button class="w3-button" title="Notifications">Registration <i class="fa fa-caret-down"></i></button>
    <div class="w3-dropdown-content w3-card-4 w3-bar-block">
      <a routerLink="/register" class="w3-bar-item w3-button">EmployeeRegistration</a>
      <a routerLink="/register"class="w3-bar-item w3-button">CustomerRegistration</a>
    </div>
    </div>
  <a [routerLink]="['/contact']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Contact</a>
  <a [routerLink]="['/login']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Login</a>
  <a [routerLink]="['/register']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Register</a>

</div>
<router-outlet></router-outlet>
</div>
    </body>
    </header>
--------------------------------------------------------------
register
login
contact
service
feedback

pages with bootsrap
-----------------------------------------------------------------------------
style.css
-------------------
.background-image {
  background-image: url('./assets/abcd.jpg');
  background-repeat: no-repeat;
  background-size: cover;
height:1100;
}
--------------------------
book.component.html
--------------------------------------------
<body class="background-image">
--------------------------------------------------To Create a Project-------------------------------------------------------------------
step 1:-
-----------------go into the app folder
create the modules
1)ng g c flight
2)ng g c register
3)ng g c bookticket
4)ng g c contact
5)ng g c feedback
6)ng g c searchflight
---------------------------------------------------------
step 2:-
modify the html files.
register.component.html ,book,contact,feedback,search
--------------------
<body class="background-image">
<h1>Flight Booking Page</h1><hr color="red">
<table>
  <tr><td>Enter your name</td><td><input type=text name=t1 size=20></td></tr>
  <tr><td>Enter your Address</td><td><input type=text name=t2 size=20></td></tr>
  <tr><td>Enter your Phoneno</td><td><input type=text name=t3 size=20></td></tr>
  <tr><td>Enter your Date of Travel</td><td><input type=text name=t4 size=20></td></tr>
  <tr><td>Enter your Time of Travel</td><td><input type=text name=t5 size=20></td></tr>
  <tr><td></td><td><input type=submit value="Submit"></td></tr>
  </table>

    <div id=leftdiv>
        <h3>This is AirLine Reservation System</h3>
    </div>
    <div id=middiv>
        <h3>This is AirLine Reservation System</h3>
    </div>
    <div id=rightdiv>
        <h3>This is AirLine Reservation System</h3>
        </div>
</body>
---------------------------------------------------------------------------------
step 3:-
---------------
open flight.component.html
-------------------
flight.component.ts
---------------------------------
copy the selector and paste in the index.html
----------------------------------------------------------------
step 4:-
flight.component.html
---------------------------------
paste the bootstrap menu bar.
---------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Airline Reservation</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<header>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="stylesheet" href="https://www.w3schools.com/lib/w3-theme-black.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <body id="myPage">
<div class="w3-top">
 <div class="w3-bar w3-theme-d2 w3-left-align">
  <a class="w3-bar-item w3-button w3-hide-medium w3-hide-large w3-right w3-hover-white w3-theme-d2" href="javascript:void(0);" onclick="openNav()"><i class="fa fa-bars"></i></a>
  <a class="w3-bar-item w3-button w3-coral"><i class="fa fa-home w3-margin-right"></i>Mphasis Batch-2023</a>
  <a routerLink="home" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Home</a>
  <div class="w3-dropdown-hover w3-hide-small">
    <button class="w3-button" title="Notifications">Registration <i class="fa fa-caret-down"></i></button>
    <div class="w3-dropdown-content w3-card-4 w3-bar-block">
      <a routerLink="/register" class="w3-bar-item w3-button">CustomerRegistration</a>
      <a routerLink="/book"class="w3-bar-item w3-button">CustomerTicketBooking</a>
    </div>
    </div>
  <a [routerLink]="['/contact']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Contact</a>
  <a [routerLink]="['/search']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">Search Flight</a>
  <a [routerLink]="['/feedback']" class="w3-bar-item w3-button w3-hide-small w3-hover-white">FeedBack</a>

</div>
<router-outlet></router-outlet>  <- it gives space to render the pages
</div>
    </body>
    </header>

--------------------------------------------------------------
step 5:-
-------------
app.module.ts 
-------------------------
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import {Routes,RouterModule} from '@angular/router';   <------------------------------------paste
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { AirlinesComponent } from './airlines/airlines.component';
import { FeedbackComponent } from './feedback/feedback.component';
import { ContactComponent } from './contact/contact.component';
import { SearchComponent } from './search/search.component';
import { BookComponent } from './book/book.component';
import { RegisterComponent } from './register/register.component';



const appRoutes: Routes =    <------------------------------------------paste
[
  {path:'book',component:BookComponent},
  {path:'register',component:RegisterComponent},
  {path:'search',component:SearchComponent},
  {path:'feedback',component:FeedbackComponent},
  {path:'contact',component:ContactComponent},
  ];

@NgModule({
  declarations: [
    AppComponent,
    AirlinesComponent,
    FeedbackComponent,
    ContactComponent,
    SearchComponent,
    BookComponent,
    RegisterComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    RouterModule.forRoot(appRoutes) <--------------------------paste
  ],
  providers: [],
  bootstrap: [AirlinesComponent]  <----------------------------------paste
})
export class AppModule { }
-------------------------------
assert paste the images
------------------------------------------
style.css
-------------------- 
/* You can add global styles to this file, and also import other style files */

.background-image {
  background-image: url('./assets/img1.jpg');
  background-repeat: no-repeat;
  background-size: cover;
  height: 1120px;
  }

-----------------------------------------------------------------------------
flow of the program
step1:- ng g c login,register,contact

step 2:-
index.html <app-login></app-login>---------app.module.ts (details of all the files used in the application)
bootstrap[],giving path,declarations(all the components),imports, 

*
according to the bootstap the program will execute.
---------------------------------------------------------------------------------------
example-1(one way binding)
--------------------------------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-onewayexample1',
  templateUrl: './onewayexample1.component.html',
  styleUrls: ['./onewayexample1.component.css']
})
export class Onewayexample1Component
{
public student=
{
  Name:'Priyanka',
  address:'Bangalore',
  phone:9988776655,
}
}
-----------------------------------------------------------------------
<dl>
  <dt>Name</dt>
  <dd>{{student.Name}}</dd>
  <dt>Address</dt>
  <dd>{{student.address}}</dd>
  <dt>Phone no</dt>
  <dd>{{student.phone}}</dd>
</dl>
---------------------------------------------------------------------------------
example-2
---------------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-onewayexample2',
  templateUrl: './onewayexample2.component.html',
  styleUrls: ['./onewayexample2.component.css']
})
export class Onewayexample2Component
{
public name='Samsung TV';
public city='Bangalore';
public inStock=true;

public product={
  name:'',
  city:'',
  inStock:false
}

public Click()
{
  this.product=
  {
    name:this.name,
    city:this.city,
    inStock:this.inStock
  }
}
}
------------------------------------Two way binding-----------------------------------------
example-2
---------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
<h2 class="text-center text-primary">This is an example of two way binding</h2>
<div class="row">
  <div class="col-3">
    <div class="form-group">
      <label>Name</label>
      <input [(ngModel)]="name" type="text" class="form-control">
    </div>
    <div class="form-group">
      <label>Shipped To</label>
      <select [(ngModel)]="city" class="form-control">
        <option>Bangalore</option>
        <option>Hydrabad</option>
        <option>Pune</option>
        </select>
    </div>
    <div class="form-group">
      <label>Is Stock Available</label>
      <input [(ngModel)]="inStock" type="checkbox"> Yes
    </div>
    <div class="form-group">
      <button (click)=Click() class="btn btn-primary btn-block">Update</button>
    </div>
    <div class="col-9">
<table class="table table-hover">
<colgroup span="1" style="background-color: yellow;"></colgroup>
<tr><td>Name :</td><td [innerHTML]="product.name"></td></tr>
<tr><td>Shipped to :</td><td>{{product.city}}</td></tr>
<tr><td>Stock Present :</td><td>{{(product.inStock==true)?"Product Available":"Product not Available"}}</td></tr>
</table>

    </div>
  </div>
</div>
</div>
</body>
--------------------------------------------------------------------------------------------------------
import { FormsModule } from '@angular/forms';
import------FormsModule
--------------------------------------------------------------------------------------------------------
example-3
--------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-onewayexample2',
  templateUrl: './onewayexample2.component.html',
  styleUrls: ['./onewayexample2.component.css']
})
export class Onewayexample2Component
{
public name='LG TV';
public city='Bangalore';
public price=45000.50;
public inStock=false;

public product={
  name:'',
  city:'',
  price:0.0,
  inStock:false
}
public Click()
{
  this.product=
  {
    name:this.name,
    city:this.city,
    price:this.price,
    inStock:this.inStock
  }
}
}
-----------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
<h2 class="text-center text-primary">This is an example of two way binding</h2>
<div class="row">
  <div class="col-6">
    <div class="form-group">
      <label>Name</label>
      <input [(ngModel)]="name" type="text" class="form-control">
    </div>
    <div class="form-group">
      <label>Shipped To</label>
      <select [(ngModel)]="city" class="form-control">
        <option>Bangalore</option>
        <option>Hydrabad</option>
        <option>Pune</option>
        </select>
    </div>
    <div class="form-group">
      <label>Is Stock Available</label>
      <input [(ngModel)]="inStock" type="checkbox"> Yes
    </div>

    <div class="form-group">
      <label>Price :</label>
      <input [(ngModel)]="price" type="text" class="form-control">
    </div>

    <div class="form-group">
      <button (click)=Click() class="btn btn-primary btn-block">Update</button>
    </div>
    <div class="col-12">
<table class="table table-hover">
<colgroup span="1" style="background-color: yellow;"></colgroup>
<tr><td>Name :</td><td [innerHTML]="product.name"></td></tr>
<tr><td>Shipped to :</td><td>{{product.city}}</td></tr>
<tr><td>Shipped to :</td><td>{{product.price}}</td></tr>
<tr><td>Stock Present :</td><td>{{(product.inStock==true)?"product Available":"product not Available"}}</td></tr>
</table>

    </div>
  </div>
</div>
</div>
</body>
------------------------------------------------------------------------------------------------
example-4
---------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-ifdemo',
  templateUrl: './ifdemo.component.html',
  styleUrls: ['./ifdemo.component.css']
})
export class IfdemoComponent
{
public product={
  Name:'Nike Shoes',
  Price:4500.50,
  Photo:'./assets/shoe.jpg'
};
public showImage=false;
public btnText='Show';

public TogglePreview()
{
this.showImage=(this.showImage==false)?true:false;
this.btnText=(this.btnText=='Show')?'Hide':'Show';
}
}
-------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
<h2 class="text-center text-primary">This is an example of ng-if Directive</h2>
<div class="row">
  <div class="col-6">
    <dl>
      <dt><label>Name</label></dt>
      <dd>{{product.Name}}</dd>
      <dt><label>Price</label></dt>
      <dd>{{product.Price}}</dd>
    </dl>
<button (click)="TogglePreview()" class="btn btn-primary">{{btnText}} Image </button>
</div>
<div class="col-9">
<div *ngIf="showImage">
<img [src]="product.Photo" height="300" width="300">
<img src="./assets/shoe.jpg" height="300" width="300">
</div>
</div>
</div>
</div>
------------------------------------------------------------------------------------------------------
example-6
-------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-for-demo',
  templateUrl: './for-demo.component.html',
  styleUrls: ['./for-demo.component.css']
})
export class ForDemoComponent
{
public products=['samsung tv','samsung freedge','samsung Laptop']
}
-------------------------------------------------
<div>
<h3>Product List</h3>
<ol>
<li *ngFor="let product of products">{{product}}</li>
</ol>
</div>
------------------------------------------------------------------------------------------
example-7
--------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-for-demo',
  templateUrl: './for-demo.component.html',
  styleUrls: ['./for-demo.component.css']
})
export class ForDemoComponent
{
public data=
[ {category : 'Electronic',
products:['samsung tv','samsung freedge','samsung Laptop']},
{category : 'shoes',
products:['Nike ','Bata','Puma']},
{category : 'Clothes',
products:['T-shirt','Jeans','Shirt']},
];
}
----------------------------------------------------------------------
<div>
<h3>Product List</h3>
<ol>
<li *ngFor="let item of data">{{item.category}}
<ol type="a">
  <li *ngFor="let product of item.products">{{product}}
  </li>
  </ol>
</li>
  </ol>
</div>
----------------------------------------------------------------------------------
example-7
------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-likedemo',
  templateUrl: './likedemo.component.html',
  styleUrls: ['./likedemo.component.css']
})
export class LikedemoComponent
{
public shoes =
[
  {Name:"Nike",Photo:"assets/shoe.jpg",Likes:0 ,dislikes:0},
  {Name:"Puma",Photo:"assets/shoe1.webp",Likes:0 ,dislikes:0}
  ];
  public likes (shoes:any)
  {
    shoes.Likes++;
  }
  public dislikes (shoes:any)
  {
    shoes.dislikes++;
  }
}
--------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
  <div class="card-deck">
<div class="card" *ngFor="let shoe of shoes">
  <div class="card-header text-center">
    <h3>{{shoe.Name}}</h3>
  </div>
  <div class="card-body text-center">
    <img [src]="shoe.Photo" width="300" height="300" class="img-thumbnail">
  </div>
  <div class="card-footer text-center">
    <button (click)="likes(shoe)" class="btn btn-success">[{{shoe.Likes}}] Like</button>
    <button (click)="dislikes(shoe)" class="btn btn-danger">[{{shoe.dislikes}}] DisLike</button>
     </div>
</div>
  </div>
</div>
-----------------------------------------------------------------------------------------------------
Example-8
------------------
example1.ts
------------------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-example1',
  templateUrl: './example1.component.html',
  styleUrls: ['./example1.component.css']
})
export class Example1Component
{
public product=[
{Name:'Samsung TV',Price:45000.00},
{Name:'Sony TV',Price:75000.00},
{Name:'LG TV',Price:35000.00},
];
public txtName:any; <---global variable (scope through out the program).
public txtPrice:any;

public NewProduct=
{
  Name:"",  <--local variable which are inside the function (scope is within the function)
  Price:0
}

public AddProduct()
{
  alert('Product Added');
  this.NewProduct={
    Name:this.txtName,  <--- assigning the gobal variable to local variable.
    Price:this.txtPrice
  };
  this.product.push(this.NewProduct)
  this.txtName='',
  this.txtPrice=0
}

public DeleteProduct(index:number)
{
var status=confirm("Are you sure you want to delete");
if(status==true)
{
this.product.splice(index,1);
}
}
}
---------------------------------------------------------------------------
example1.html
--------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
  <div class="AddProduct">
    <h2>Add New Product</h2>
    <div class="form-group">
      <label>Name</label>
      <div>
<input [(ngModel)]="txtName" type="text" class="form-control">
      </div>
      <div class="form-group">
        <label>Price</label>
        <div>
  <input [(ngModel)]="txtPrice" type="text" class="form-control">
        </div>
    </div>
  </div>
  <button (click)="AddProduct()" class="btn btn-success">Add Product</button>
  </div>

<div>
<h2>Product List</h2>
<table>
<tr><th>Name</th><th>Price </th><th>Action</th></tr>
<tr *ngFor="let product of product; let i=index"><td>{{product.Name}}</td><td>{{product.Price}}</td>
<td><button class="btn btn-danger" (click)="DeleteProduct(i)">Delete Product</button></td>
</tr>
</table>
</div>
</div>
-------------------------------------------------------------------------------------------
example1.css
-------------------------------
.AddProduct
{
  width:300px;
  border:2px solid darkblue;
  padding:10px;
  margin: 20px;
}

mytable,tr,td,th
{
  width:900px;
  border:2px solid darkblue;
  padding:10px;
  margin: 20px;
}
---------------------------------------------------------------------------------------
Angular Pipe
---------------------------
1)Pipe is used to transform data.
2)Data may come to angular from various source so the data type of source provider and datatype of the typescript will not match.so it will not display in proper format .so pipe will transform the data and display in desired format.
3)pipes are used for formatting and filtering the data.
4)All pipes are derived from 'PipeTransform' .
5)import {PipeTransform} from '@angular/core'
6)we have some pre-defined pipes and we can also create custom pipes.
7)Every pipe is defined with a pipe name,which is configured using "@Pipe()".
@Pipe({name:"uppercase"})
8)Every pipe implements  "PipeTransform" and use the transform() method.
export class Uppercase implements PipeTransform
{
transform(value)
{ return value;}}
-----------------------------------------------------------------
example :1
----------------------
app.component.ts file.
-------------------------------------------
import { Component } from '@angular/core';
@Component ({ 
   selector: 'my-app', 
   templateUrl: 'app/app.component.html' 
}) 
export class AppComponent { 
   TutorialName: string = 'Angular JS'; 
   appList: string[] = ["Binding", "Display", "Services"]; 
} 
-----------------------------------------------------------------------
app.component.html file.
-------------------------------------------------------------------------
<div> 
   The name of this Tutorial is {{TutorialName}}<br>  
   The first Topic is {{appList[0] | uppercase }}<br> 
   The second Topic is {{appList[1] | uppercase }}<br> 
   The third Topic is {{appList[2]| uppercase }}<br> 
</div>

----------------------------------------------------------------------------------------
Example :-
Pre-defined Pipes
-----------------------------------
import { Component } from '@angular/core';
@Component({
  selector: 'app-pipeexample1',
  templateUrl: './pipeexample1.component.html',
  styleUrls: ['./pipeexample1.component.css']
})
export class Pipeexample1Component  
{
  TutorialName: string = 'Angular JS'; 
  appList: string[] = ["Binding data", "Display device", "Services oriented"]; 
public product = {
  Name:'Samsung TV',
  Price:45000.50,
  Mfd:new Date('2021-02-02')
}}
---------------------------------------------------------------------------------------------
<div> 
    The name of this Tutorial is {{TutorialName}}<br>  
    The first Topic is {{appList[0] | titlecase }}<br> 
    The second Topic is {{appList[1] | titlecase }}<br> 
    The third Topic is {{appList[2]| titlecase }}<br> 
    The product name is {{product.Name | titlecase}}<br>
    The product price is {{product.Price}}<br>
    The product price is {{product.Price|number}}<br>
    The product price is {{product.Price|currency}}<br>
    The product price is {{product.Price|currency:'INR'}}<br>
    The product price is {{product.Price|currency:'&#8377;'}}<br>
    The product date is {{product.Mfd|date:'MMM-dd-yyyy'}}<br>
    The product date is {{product.Mfd|date:'shortDate'}}<br>
    The product Date is {{product|json}}<br/>    
    The Canadian dollar {{1234567 | currency:'CAD':'symbol' :'1.2-5'}}<br>
    The first Topic is {{appList[0] | slice:1:2}}<br> 
    The second Topic is {{appList[1] | slice:1:3}}<br> 
   The third Topic is {{appList[2]| slice:2:3}}<br> 
    
 </div>

-----------------------------------------------------------------------------------------
Angular  also has the facility to create custom pipes. The general way to define a custom pipe is as follows.
syntax:-
----------------
import { Pipe, PipeTransform } from '@angular/core';  
@Pipe({name: 'Pipename'}) 

export class Pipeclass implements PipeTransform 
{ 
   transform(parameters): returntype 
{ } 
} 
--------------------------------------------------------------------------------------
Where,

'Pipename' - This is the name of the pipe.

Pipeclass - This is name of the class assigned to the custom pipe.

Transform - This is the function to work with the pipe.

Parameters - This are the parameters which are passed to the pipe.

Returntype - This is the return type of the pipe.
----------------------------------------------------------------------------------
step-1)create folder multiplier
step-2)
--------------------------------------------------------------
multiplier.component.ts
---------------------------------------------------------------------
import {Component} from '@angular/core';
@Component ({
  selector: 'app-multiplier',
  template:`
  <p>Multiplier {{5 | Multiplier: 20}}</p> <br />
  
  <p>Multiplier {{2 | Multiplier: 20}}</p> <br />
  
  <p>Multiplier {{4 | Multiplier: 20}}</p> <br />
   `
})
export class MultiplierComponent
{}
-----------------------------------------------------------------------------------
step 3) create a file inside multiplier folder
-----------------------------------------------------------
multiplier.pipe.ts (new pipe is defined) //this custom pipe have to be separate
--------------------------------------------------------------
import {Pipe,PipeTransform} from '@angular/core';

@Pipe({name: 'Multiplier'})

export class Multiplierpipe implements PipeTransform
{
    transform(value:number, multiply: number):number
    {
        return multiply * value
    }
}

--------------------------------------------------------------------------------------
app.module.ts
----------------------------------------------------------------------------------------
import { NgModule }      from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppComponent }  from './app.component';
import {FormsModule} from  '@angular/forms';
import { Multiplierpipe } from './multiplier/multiplier.pipe';

@NgModule({
  imports:      [ BrowserModule],
  declarations: [ AppComponent ,Multiplierpipe],
  bootstrap:    [ MultiplierComponent ]
})
export class AppModule { }

----------------------------------------------------------------------------------------------

import {Pipe,PipeTransform} from '@angular/core';
@Pipe({name: 'sentencecase'})

export class SentenceCase implements PipeTransform
{
    transform(str)
    {
        let firstChar=str.charAt(0);
        let restChars=str.substring(1);
        let sentence=firstChar.toUpperCase()+restChars.toLowerCase();
        return sentence;
    }
}
-------------------------------------------------------------------------------------
import { Component } from '@angular/core';
@Component({
  selector: 'app-multiplier',
 templateUrl:'multiplier.component.html'
   
 })
export class MultiplierComponent 
 {
public msg='welcome to Angular 10';
   }
-----------------------------------------------------------------------
example-shopping cart
-------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid">
  <h2 class="text-center text-primary"><span class="fa fa-shopping-cart"></span>Amazon - Shopping</h2>
  <div class="row">
    <div class="col-3">
        <div class="form-group">
            <label>Select a Category</label>
            <div>
                <select (change)="OnCategoryChange()" [(ngModel)]="selectedCategoryName" class="form-control">
                    <option *ngFor="let item of categories">
                        {{item}}
                    </option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label>Select a Product</label>
            <div>
                <select (change)="onProductChanged()" [(ngModel)]="selectedProductName" class="form-control">
                    <option *ngFor="let item of products">
                        {{item}}
                    </option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label>Preview</label>
            <div class="card">
                <div class="card-header">
                    <h3>{{searchedProduct.Name}}</h3>
                </div>
                <div class="card-body text-center">
                    <img [src]="searchedProduct.Photo" width="200" height="200">
                </div>
                <div class="card-footer text-center">
                    <h3>{{searchedProduct.Price | currency:'INR'}}</h3>
                    <button (click)="AddToCartClick()" class="btn btn-danger btn-block"> <span class="fa fa-shopping-cart"></span>Add to Cart</button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-6">
        <div>
            <table *ngIf="showCart" style="margin-top: 100px;" class="table table-hover">
                <caption>Your Cart Items</caption>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Preview</th>
                    </tr>
                </thead>
                <tbody>
                    <tr *ngFor="let item of cartItems; let i=index">
                        <td>{{item.Name}}</td>
                        <td>{{item.Price}}</td>
                        <td><img width="50" height="50" [src]="item.Photo"></td>
                        <td>
                            <button (click)="DeleteCartItem(i)" class="btn btn-outline-danger"> <span class="fa fa-trash"></span>Delete </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-3">
        <div>
            <button (click)="ToggleCartDisplay()" class="btn btn-danger btn-block"><span class="fa fa-shopping-cart"></span> [{{cartItemsCount}}] Your Cart Items</button>
        </div>

    </div>
  </div>
</div>
</body>
</html>
--------------------------------------------------------------------------------------------------------------
import { Component } from '@angular/core';

@Component({
  selector: 'app-amazon',
  templateUrl: './amazon.component.html',
  styleUrls: ['./amazon.component.css']
})
export class AmazonComponent
 {
  public categories = ['Select a Category', 'Electronics', 'Footwear', 'Fashion'];
  public electronics = ['Select Electronics', 'JBL Speaker', 'Earpods'];
  public footwear = ['Select Footwear', 'Nike Casuals', 'Lee Cooper Boot'];
  public fashion = ['Select Fashion', 'Shirt', 'Jeans'];
  public data = [
   {Name: 'JBL Speaker', Price: 4500.55, Photo: 'assets/jblspeaker.jpg'},
   {Name: 'Earpods', Price: 3000.44, Photo: 'assets/earpods.jpg'},
   {Name: 'Nike Casuals', Price: 6000.44, Photo: 'assets/shoe.jpg'},
   {Name: 'Lee Cooper Boot', Price: 2000.44, Photo: 'assets/shoe1.jpg'},
   {Name: 'Shirt', Price: 1000.44, Photo: 'assets/shirt.jpg'},
   {Name: 'Jeans', Price: 4000.44, Photo: 'assets/jeans.jpg'},
  ];
  public products:any = [];
  public selectedCategoryName:any = 'Select a Category';
  public selectedProductName:any;
  public searchResults:any = [];
  public searchedProduct =
  {
    Name: '',
    Price: 0,
    Photo: ''
  };
  public cartItems:any = [];
  public cartItemsCount = 0;
  public showCart = false;
  public GetCartItemsCount()
  {
    this.cartItemsCount = this.cartItems.length;
  }
  
public OnCategoryChange()
{
    switch(this.selectedCategoryName)
    {
      case 'Electronics':
        this.products = this.electronics;
        break;
      case 'Footwear':
        this.products = this.footwear;
        break;
      case 'Fashion':
        this.products = this.fashion;
        break;
      default:
        this.products = ['Select a Category'];
        break;
    }
  }
  public onProductChanged(){
      this.searchResults = this.data.filter(x=>x.Name==this.selectedProductName);
      this.searchedProduct = {
        Name: this.searchResults[0].Name,
        Price: this.searchResults[0].Price,
        Photo: this.searchResults[0].Photo
      };
  }
  public AddToCartClick()
  {
     this.cartItems.push(this.searchedProduct);
     alert('Item Added to Cart');
     this.GetCartItemsCount();
  }
  public ToggleCartDisplay() 
{
    this.showCart = (this.showCart==false)?true:false;
  }
  public DeleteCartItem(index:any)
  {
     let confirmDelete = confirm('Are you sure, want to Delete?');
     if(confirmDelete==true) {
       this.cartItems.splice(index, 1);
       this.GetCartItemsCount();
     }
  }
}
-----------------------------------------------------------------------------------------------------------------
Angular Service
--------------------------
It is used for creating user-defined business logic which can be used and reused in the application by injecting into any component.
-------------------------------
Different between service and function
------------------------------------------------------
function is can be used  within a single module .
were as service can be used multiple modules or a single application (banking application)
------------------------------------------
steps to create a service.
--------------------------------------
step 1:- we will create a service in a separte module.
step 2:- We will inject it to a component and use it.

1)import {Injectable} from '@angular/core'
2)@Injectable()
3)providedIn:'root'
---------------------------------------------------------------------------------------
calculator.service.ts
--------------------------------------------
import { Component } from '@angular/core';
import {Injectable} from '@angular/core'
@Injectable({
providedIn:'root'
})
export class Service1Component
{
public add(...params:number[]):number
{
  let result=0;
  for(let val of params)
  {
    result=result+val;
  }
  return result;
}
}
-------------------------------------------------------
create a module calculator
---------------------------------------------
import { Component } from '@angular/core';
import { Service1Component } from '../service.component';
@Component({
  selector: 'app-calc-service',
  templateUrl: './calc-service.component.html',
  styleUrls: ['./calc-service.component.css']
})
export class CalcServiceComponent {
sum:number=0;
constructor(calc:Service1Component)
{
  this.sum=calc.add(55,66,77,88,99);
  console.log("The sum is "+this.sum);
  alert("The sum is "+this.sum);
}
}
-----------------------------------------------------------------------------------
 providers: [Service1Component],
  bootstrap: [CalcServiceComponent]
-----------------------------------------------------------------









